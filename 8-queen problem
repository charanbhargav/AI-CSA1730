code:

N = 8  # Size of the board (8x8)

def is_safe(board, row, col):
    # Check this column on previous rows
    for i in range(row):
        if board[i][col] == 1:
            return False

    # Check upper-left diagonal
    for i, j in zip(range(row-1, -1, -1), range(col-1, -1, -1)):
        if board[i][j] == 1:
            return False

    # Check upper-right diagonal
    for i, j in zip(range(row-1, -1, -1), range(col+1, N)):
        if board[i][j] == 1:
            return False

    return True

def solve(board, row):
    if row >= N:
        return True

    for col in range(N):
        if is_safe(board, row, col):
            board[row][col] = 1  # Place queen
            if solve(board, row + 1):
                return True
            board[row][col] = 0  # Backtrack

    return False

def print_board(board):
    for row in board:
        print(" ".join("Q" if col else "." for col in row))

def eight_queens():
    board = [[0]*N for _ in range(N)]
    if solve(board, 0):
        print_board(board)
    else:
        print("No solution found.")

# Run it
eight_queens()



output:
Q . . . . . . .
. . . . Q . . .
. . . . . . . Q
. . . . . Q . .
. . Q . . . . .
. . . . . . Q .
. Q . . . . . .
. . . Q . . . .
